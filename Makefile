# This file is part of endian-ci, a simple sanity check of portable-endian.h
# DO NOT MODIFY!  THIS FILE IS AUTOGENERATED FROM autogen.py!
# Copyright 2016 Ben Wiederhake
# License: MIT, see LICENSE

FILE_EXT    ?=
GCC         ?= gcc
CLANG       ?= clang
TCC         ?= tcc

all: build-all run-existing

.PHONY: gen_makefile
gen_makefile: autogen
	@echo "Overwriting Makefile by explicit request."
	@echo "I hope you know what you're doing!"
	./autogen > Makefile.tmp && mv -f Makefile.tmp Makefile

ALL_OBJS := obj/test_clang-c11-allint-noflags.o obj/test_gcc-c89-allint-noflags.o obj/test_clang-gnu99-noint64-defhere.o obj/test_gcc-c89-noint64-noflags.o obj/test_clang-c11-noint64-inline.o obj/test_clang-gnu89-noint64-noflags.o obj/test_gcc-c89-allint-defext.o obj/test_clang-gnu89-allint-defext.o obj/test_gcc-c89-allint-defhere.o obj/lib_gcc-gnu99-noint64-defhere.o obj/test_gcc-gnu89-noint64-inline.o obj/test_tcc-std-noint64-defext.o obj/test_gcc-c89-noint64-defext.o obj/test_gcc-gnu99-noint64-noflags.o obj/lib_clang-c99-allint-defhere.o obj/test_gcc-c99-noint64-defext.o obj/test_clang-gnu99-allint-noflags.o obj/test_gcc-c11-allint-defhere.o obj/test_gcc-c89-noint64-inline.o obj/lib_clang-gnu99-noint64-defhere.o obj/lib_clang-c89-noint64-defhere.o obj/test_tcc-std-noint64-defhere.o obj/test_clang-c99-noint64-defext.o obj/lib_gcc-c99-allint-defhere.o obj/test_gcc-c99-noint64-noflags.o obj/test_clang-c89-allint-defext.o obj/test_clang-gnu99-allint-defext.o obj/test_gcc-gnu99-noint64-defext.o obj/lib_clang-c11-noint64-defhere.o obj/test_clang-c11-allint-inline.o obj/test_clang-c99-noint64-noflags.o obj/test_clang-c99-allint-defext.o obj/test_tcc-std-allint-inline.o obj/test_gcc-c99-allint-inline.o obj/test_clang-gnu89-allint-noflags.o obj/test_gcc-c11-noint64-noflags.o obj/lib_gcc-gnu89-noint64-defhere.o obj/test_gcc-c89-noint64-defhere.o obj/lib_gcc-c89-allint-defhere.o obj/test_clang-c11-allint-defhere.o obj/test_tcc-std-noint64-inline.o obj/test_gcc-c11-noint64-inline.o obj/test_gcc-c89-allint-inline.o obj/test_clang-c99-noint64-defhere.o obj/lib_clang-gnu89-allint-defhere.o obj/lib_gcc-c11-noint64-defhere.o obj/lib_tcc-std-allint-defhere.o obj/test_gcc-c11-allint-noflags.o obj/test_clang-gnu89-noint64-defext.o obj/test_gcc-gnu99-allint-inline.o obj/test_clang-c11-noint64-noflags.o obj/test_gcc-c11-allint-defext.o obj/lib_clang-c11-allint-defhere.o obj/test_clang-gnu99-noint64-noflags.o obj/test_clang-gnu99-allint-defhere.o obj/test_clang-c11-allint-defext.o obj/test_clang-c89-allint-defhere.o obj/test_gcc-gnu89-noint64-noflags.o obj/lib_tcc-std-noint64-defhere.o obj/test_gcc-c99-noint64-inline.o obj/test_clang-gnu89-noint64-inline.o obj/test_gcc-gnu99-allint-defext.o obj/test_clang-c89-allint-noflags.o obj/test_gcc-gnu99-allint-defhere.o obj/lib_gcc-gnu89-allint-defhere.o obj/lib_clang-gnu99-allint-defhere.o obj/test_clang-c99-noint64-inline.o obj/test_gcc-c99-allint-noflags.o obj/test_gcc-gnu99-noint64-defhere.o obj/lib_gcc-gnu99-allint-defhere.o obj/lib_clang-c89-allint-defhere.o obj/test_gcc-gnu99-noint64-inline.o obj/test_clang-c99-allint-noflags.o obj/test_clang-c99-allint-inline.o obj/test_tcc-std-allint-noflags.o obj/test_clang-gnu99-noint64-defext.o obj/test_clang-gnu89-noint64-defhere.o obj/test_gcc-gnu89-allint-inline.o obj/test_gcc-gnu89-noint64-defext.o obj/lib_gcc-c89-noint64-defhere.o obj/test_gcc-gnu89-allint-noflags.o obj/test_tcc-std-allint-defext.o obj/test_gcc-c99-allint-defhere.o obj/test_clang-c89-noint64-defext.o obj/test_gcc-c11-noint64-defext.o obj/test_clang-c11-noint64-defext.o obj/test_gcc-c99-noint64-defhere.o obj/test_clang-gnu89-allint-defhere.o obj/test_gcc-gnu89-allint-defhere.o obj/lib_gcc-c99-noint64-defhere.o obj/lib_clang-c99-noint64-defhere.o obj/test_clang-gnu99-allint-inline.o obj/test_clang-c99-allint-defhere.o obj/test_gcc-gnu89-noint64-defhere.o obj/test_gcc-gnu89-allint-defext.o obj/test_gcc-c99-allint-defext.o obj/test_clang-c11-noint64-defhere.o obj/test_clang-gnu99-noint64-inline.o obj/lib_gcc-c11-allint-defhere.o obj/test_clang-gnu89-allint-inline.o obj/test_gcc-gnu99-allint-noflags.o obj/test_clang-c89-noint64-defhere.o obj/test_gcc-c11-noint64-defhere.o obj/test_clang-c89-allint-inline.o obj/test_clang-c89-noint64-inline.o obj/test_gcc-c11-allint-inline.o obj/test_clang-c89-noint64-noflags.o obj/lib_clang-gnu89-noint64-defhere.o obj/test_tcc-std-allint-defhere.o obj/test_tcc-std-noint64-noflags.o

.PHONY: run-existing
run-existing:
	@for i in ${ALL_BINS}; \
	do \
		if test -x $$i ; \
		then \
			echo "Running test $$i:" ; \
			$$i || exit 1 ; \
		else \
			echo "Running test $$i: SKIPPED, didn't build" ; \
		fi \
	done

portable-endian/portable-endian.h:
	@echo "portable-endian/portable-endian.h not found."
	@echo "Did you checkout the submodule?  Try this:"
	@echo "git submodule update --init"
	@exit 1

.PHONY: clean
clean:
	@echo 'rm -f $${ALL_BINS} $${ALL_OBJS}'
	@rm -f ${ALL_BINS} ${ALL_OBJS}
	ls bin
	ls obj
	@echo "End of 'clean'"

CLANG_BINS := bin/clang-c11-allint-defext${FILE_EXT} bin/clang-c11-allint-defhere${FILE_EXT} bin/clang-c11-allint-inline${FILE_EXT} bin/clang-c11-allint-noflags${FILE_EXT} bin/clang-c11-noint64-defext${FILE_EXT} bin/clang-c11-noint64-defhere${FILE_EXT} bin/clang-c11-noint64-inline${FILE_EXT} bin/clang-c11-noint64-noflags${FILE_EXT} bin/clang-c89-allint-defext${FILE_EXT} bin/clang-c89-allint-defhere${FILE_EXT} bin/clang-c89-allint-inline${FILE_EXT} bin/clang-c89-allint-noflags${FILE_EXT} bin/clang-c89-noint64-defext${FILE_EXT} bin/clang-c89-noint64-defhere${FILE_EXT} bin/clang-c89-noint64-inline${FILE_EXT} bin/clang-c89-noint64-noflags${FILE_EXT} bin/clang-c99-allint-defext${FILE_EXT} bin/clang-c99-allint-defhere${FILE_EXT} bin/clang-c99-allint-inline${FILE_EXT} bin/clang-c99-allint-noflags${FILE_EXT} bin/clang-c99-noint64-defext${FILE_EXT} bin/clang-c99-noint64-defhere${FILE_EXT} bin/clang-c99-noint64-inline${FILE_EXT} bin/clang-c99-noint64-noflags${FILE_EXT} bin/clang-gnu89-allint-defext${FILE_EXT} bin/clang-gnu89-allint-defhere${FILE_EXT} bin/clang-gnu89-allint-inline${FILE_EXT} bin/clang-gnu89-allint-noflags${FILE_EXT} bin/clang-gnu89-noint64-defext${FILE_EXT} bin/clang-gnu89-noint64-defhere${FILE_EXT} bin/clang-gnu89-noint64-inline${FILE_EXT} bin/clang-gnu89-noint64-noflags${FILE_EXT} bin/clang-gnu99-allint-defext${FILE_EXT} bin/clang-gnu99-allint-defhere${FILE_EXT} bin/clang-gnu99-allint-inline${FILE_EXT} bin/clang-gnu99-allint-noflags${FILE_EXT} bin/clang-gnu99-noint64-defext${FILE_EXT} bin/clang-gnu99-noint64-defhere${FILE_EXT} bin/clang-gnu99-noint64-inline${FILE_EXT} bin/clang-gnu99-noint64-noflags${FILE_EXT}
.PHONY: build-clang-only
build-clang-only: ${CLANG_BINS}

GCC_BINS := bin/gcc-c11-allint-defext${FILE_EXT} bin/gcc-c11-allint-defhere${FILE_EXT} bin/gcc-c11-allint-inline${FILE_EXT} bin/gcc-c11-allint-noflags${FILE_EXT} bin/gcc-c11-noint64-defext${FILE_EXT} bin/gcc-c11-noint64-defhere${FILE_EXT} bin/gcc-c11-noint64-inline${FILE_EXT} bin/gcc-c11-noint64-noflags${FILE_EXT} bin/gcc-c89-allint-defext${FILE_EXT} bin/gcc-c89-allint-defhere${FILE_EXT} bin/gcc-c89-allint-inline${FILE_EXT} bin/gcc-c89-allint-noflags${FILE_EXT} bin/gcc-c89-noint64-defext${FILE_EXT} bin/gcc-c89-noint64-defhere${FILE_EXT} bin/gcc-c89-noint64-inline${FILE_EXT} bin/gcc-c89-noint64-noflags${FILE_EXT} bin/gcc-c99-allint-defext${FILE_EXT} bin/gcc-c99-allint-defhere${FILE_EXT} bin/gcc-c99-allint-inline${FILE_EXT} bin/gcc-c99-allint-noflags${FILE_EXT} bin/gcc-c99-noint64-defext${FILE_EXT} bin/gcc-c99-noint64-defhere${FILE_EXT} bin/gcc-c99-noint64-inline${FILE_EXT} bin/gcc-c99-noint64-noflags${FILE_EXT} bin/gcc-gnu89-allint-defext${FILE_EXT} bin/gcc-gnu89-allint-defhere${FILE_EXT} bin/gcc-gnu89-allint-inline${FILE_EXT} bin/gcc-gnu89-allint-noflags${FILE_EXT} bin/gcc-gnu89-noint64-defext${FILE_EXT} bin/gcc-gnu89-noint64-defhere${FILE_EXT} bin/gcc-gnu89-noint64-inline${FILE_EXT} bin/gcc-gnu89-noint64-noflags${FILE_EXT} bin/gcc-gnu99-allint-defext${FILE_EXT} bin/gcc-gnu99-allint-defhere${FILE_EXT} bin/gcc-gnu99-allint-inline${FILE_EXT} bin/gcc-gnu99-allint-noflags${FILE_EXT} bin/gcc-gnu99-noint64-defext${FILE_EXT} bin/gcc-gnu99-noint64-defhere${FILE_EXT} bin/gcc-gnu99-noint64-inline${FILE_EXT} bin/gcc-gnu99-noint64-noflags${FILE_EXT}
.PHONY: build-gcc-only
build-gcc-only: ${GCC_BINS}

TCC_BINS := bin/tcc-std-allint-defext${FILE_EXT} bin/tcc-std-allint-defhere${FILE_EXT} bin/tcc-std-allint-inline${FILE_EXT} bin/tcc-std-allint-noflags${FILE_EXT} bin/tcc-std-noint64-defext${FILE_EXT} bin/tcc-std-noint64-defhere${FILE_EXT} bin/tcc-std-noint64-inline${FILE_EXT} bin/tcc-std-noint64-noflags${FILE_EXT}
.PHONY: build-tcc-only
build-tcc-only: ${TCC_BINS}

ALL_BINS := ${CLANG_BINS} ${GCC_BINS} ${TCC_BINS}
build-all: ${ALL_BINS}

bin/clang-c11-allint-defext${FILE_EXT}: test-functionality.c as-static-lib.c \
		portable-endian/portable-endian.h
	@echo "Building bin/clang-c11-allint-defext${FILE_EXT} ..."
	@${CLANG} -Weverything -Werror -pedantic -O2 -g -std=c11 -DPORTABLE_ENDIAN_MODIFIERS= -c -o obj/lib_clang-c11-allint-defhere.o as-static-lib.c
	@${CLANG} -Weverything -Werror -pedantic -O2 -g -std=c11 -DPORTABLE_ENDIAN_MODIFIERS= -DPORTABLE_ENDIAN_DECLS_ONLY -c -o obj/test_clang-c11-allint-defext.o test-functionality.c
	@${CLANG} -Weverything -Werror -pedantic -O2 -g -o bin/clang-c11-allint-defext${FILE_EXT} obj/lib_clang-c11-allint-defhere.o obj/test_clang-c11-allint-defext.o
	@echo " => success (GOOD, matches documentation)"

bin/clang-c11-allint-defhere${FILE_EXT}: test-functionality.c \
		portable-endian/portable-endian.h
	@echo "Building bin/clang-c11-allint-defhere${FILE_EXT} ..."
	@${CLANG} -Weverything -Werror -pedantic -O2 -g -std=c11 -DPORTABLE_ENDIAN_MODIFIERS= -c -o obj/test_clang-c11-allint-defhere.o test-functionality.c
	@${CLANG} -Weverything -Werror -pedantic -O2 -g -o bin/clang-c11-allint-defhere${FILE_EXT} obj/test_clang-c11-allint-defhere.o
	@echo " => success (GOOD, matches documentation)"

bin/clang-c11-allint-inline${FILE_EXT}: test-functionality.c \
		portable-endian/portable-endian.h
	@echo "Building bin/clang-c11-allint-inline${FILE_EXT} ..."
	@${CLANG} -Weverything -Werror -pedantic -O2 -g -std=c11 -DPORTABLE_ENDIAN_MODIFIERS="static inline" -c -o obj/test_clang-c11-allint-inline.o test-functionality.c
	@${CLANG} -Weverything -Werror -pedantic -O2 -g -o bin/clang-c11-allint-inline${FILE_EXT} obj/test_clang-c11-allint-inline.o
	@echo " => success (GOOD, matches documentation)"

bin/clang-c11-allint-noflags${FILE_EXT}: test-functionality.c \
		portable-endian/portable-endian.h
	@echo "Building bin/clang-c11-allint-noflags${FILE_EXT} ..."
	@${CLANG} -Weverything -Werror -pedantic -O2 -g -std=c11 -c -o obj/test_clang-c11-allint-noflags.o test-functionality.c
	@${CLANG} -Weverything -Werror -pedantic -O2 -g -o bin/clang-c11-allint-noflags${FILE_EXT} obj/test_clang-c11-allint-noflags.o
	@echo " => success (GOOD, matches documentation)"

bin/clang-c11-noint64-defext${FILE_EXT}: test-functionality.c as-static-lib.c \
		portable-endian/portable-endian.h
	@echo "Building bin/clang-c11-noint64-defext${FILE_EXT} ..."
	@${CLANG} -Weverything -Werror -pedantic -O2 -g -std=c11 -DPORTABLE_ENDIAN_NO_UINT_64_T -DPORTABLE_ENDIAN_MODIFIERS= -c -o obj/lib_clang-c11-noint64-defhere.o as-static-lib.c
	@${CLANG} -Weverything -Werror -pedantic -O2 -g -std=c11 -DPORTABLE_ENDIAN_NO_UINT_64_T -DPORTABLE_ENDIAN_MODIFIERS= -DPORTABLE_ENDIAN_DECLS_ONLY -c -o obj/test_clang-c11-noint64-defext.o test-functionality.c
	@${CLANG} -Weverything -Werror -pedantic -O2 -g -o bin/clang-c11-noint64-defext${FILE_EXT} obj/lib_clang-c11-noint64-defhere.o obj/test_clang-c11-noint64-defext.o
	@echo " => success (GOOD, matches documentation)"

bin/clang-c11-noint64-defhere${FILE_EXT}: test-functionality.c \
		portable-endian/portable-endian.h
	@echo "Building bin/clang-c11-noint64-defhere${FILE_EXT} ..."
	@${CLANG} -Weverything -Werror -pedantic -O2 -g -std=c11 -DPORTABLE_ENDIAN_NO_UINT_64_T -DPORTABLE_ENDIAN_MODIFIERS= -c -o obj/test_clang-c11-noint64-defhere.o test-functionality.c
	@${CLANG} -Weverything -Werror -pedantic -O2 -g -o bin/clang-c11-noint64-defhere${FILE_EXT} obj/test_clang-c11-noint64-defhere.o
	@echo " => success (GOOD, matches documentation)"

bin/clang-c11-noint64-inline${FILE_EXT}: test-functionality.c \
		portable-endian/portable-endian.h
	@echo "Building bin/clang-c11-noint64-inline${FILE_EXT} ..."
	@${CLANG} -Weverything -Werror -pedantic -O2 -g -std=c11 -DPORTABLE_ENDIAN_NO_UINT_64_T -DPORTABLE_ENDIAN_MODIFIERS="static inline" -c -o obj/test_clang-c11-noint64-inline.o test-functionality.c
	@${CLANG} -Weverything -Werror -pedantic -O2 -g -o bin/clang-c11-noint64-inline${FILE_EXT} obj/test_clang-c11-noint64-inline.o
	@echo " => success (GOOD, matches documentation)"

bin/clang-c11-noint64-noflags${FILE_EXT}: test-functionality.c \
		portable-endian/portable-endian.h
	@echo "Building bin/clang-c11-noint64-noflags${FILE_EXT} ..."
	@${CLANG} -Weverything -Werror -pedantic -O2 -g -std=c11 -DPORTABLE_ENDIAN_NO_UINT_64_T -c -o obj/test_clang-c11-noint64-noflags.o test-functionality.c
	@${CLANG} -Weverything -Werror -pedantic -O2 -g -o bin/clang-c11-noint64-noflags${FILE_EXT} obj/test_clang-c11-noint64-noflags.o
	@echo " => success (GOOD, matches documentation)"

bin/clang-c89-allint-defext${FILE_EXT}: test-functionality.c as-static-lib.c \
		portable-endian/portable-endian.h
	@echo "Building bin/clang-c89-allint-defext${FILE_EXT} ..."
	@${CLANG} -Weverything -Werror -pedantic -O2 -g -std=c89 -DPORTABLE_ENDIAN_MODIFIERS= -c -o obj/lib_clang-c89-allint-defhere.o as-static-lib.c
	@${CLANG} -Weverything -Werror -pedantic -O2 -g -std=c89 -DPORTABLE_ENDIAN_MODIFIERS= -DPORTABLE_ENDIAN_DECLS_ONLY -c -o obj/test_clang-c89-allint-defext.o test-functionality.c
	@${CLANG} -Weverything -Werror -pedantic -O2 -g -o bin/clang-c89-allint-defext${FILE_EXT} obj/lib_clang-c89-allint-defhere.o obj/test_clang-c89-allint-defext.o
	@echo " => success (GOOD, matches documentation)"

bin/clang-c89-allint-defhere${FILE_EXT}: test-functionality.c \
		portable-endian/portable-endian.h
	@echo "Building bin/clang-c89-allint-defhere${FILE_EXT} ..."
	@${CLANG} -Weverything -Werror -pedantic -O2 -g -std=c89 -DPORTABLE_ENDIAN_MODIFIERS= -c -o obj/test_clang-c89-allint-defhere.o test-functionality.c
	@${CLANG} -Weverything -Werror -pedantic -O2 -g -o bin/clang-c89-allint-defhere${FILE_EXT} obj/test_clang-c89-allint-defhere.o
	@echo " => success (GOOD, matches documentation)"

bin/clang-c89-allint-inline${FILE_EXT}: test-functionality.c \
		portable-endian/portable-endian.h
	@echo "Building bin/clang-c89-allint-inline${FILE_EXT} ..."
	@if \
		${CLANG} -Weverything -Werror -pedantic -O2 -g -std=c89 -DPORTABLE_ENDIAN_MODIFIERS="static inline" -c -o obj/test_clang-c89-allint-inline.o test-functionality.c> /dev/null 2>&1 && \
		${CLANG} -Weverything -Werror -pedantic -O2 -g -o bin/clang-c89-allint-inline${FILE_EXT} obj/test_clang-c89-allint-inline.o > /dev/null 2>&1 ; \
	then \
		echo " => success (BAD, doesn't match documentation!)" ; \
		exit 1 ; \
	else \
		echo " => fail (GOOD, matches documentation)" ; \
	fi

bin/clang-c89-allint-noflags${FILE_EXT}: test-functionality.c \
		portable-endian/portable-endian.h
	@echo "Building bin/clang-c89-allint-noflags${FILE_EXT} ..."
	@${CLANG} -Weverything -Werror -pedantic -O2 -g -std=c89 -c -o obj/test_clang-c89-allint-noflags.o test-functionality.c
	@${CLANG} -Weverything -Werror -pedantic -O2 -g -o bin/clang-c89-allint-noflags${FILE_EXT} obj/test_clang-c89-allint-noflags.o
	@echo " => success (GOOD, matches documentation)"

bin/clang-c89-noint64-defext${FILE_EXT}: test-functionality.c as-static-lib.c \
		portable-endian/portable-endian.h
	@echo "Building bin/clang-c89-noint64-defext${FILE_EXT} ..."
	@${CLANG} -Weverything -Werror -pedantic -O2 -g -std=c89 -DPORTABLE_ENDIAN_NO_UINT_64_T -DPORTABLE_ENDIAN_MODIFIERS= -c -o obj/lib_clang-c89-noint64-defhere.o as-static-lib.c
	@${CLANG} -Weverything -Werror -pedantic -O2 -g -std=c89 -DPORTABLE_ENDIAN_NO_UINT_64_T -DPORTABLE_ENDIAN_MODIFIERS= -DPORTABLE_ENDIAN_DECLS_ONLY -c -o obj/test_clang-c89-noint64-defext.o test-functionality.c
	@${CLANG} -Weverything -Werror -pedantic -O2 -g -o bin/clang-c89-noint64-defext${FILE_EXT} obj/lib_clang-c89-noint64-defhere.o obj/test_clang-c89-noint64-defext.o
	@echo " => success (GOOD, matches documentation)"

bin/clang-c89-noint64-defhere${FILE_EXT}: test-functionality.c \
		portable-endian/portable-endian.h
	@echo "Building bin/clang-c89-noint64-defhere${FILE_EXT} ..."
	@${CLANG} -Weverything -Werror -pedantic -O2 -g -std=c89 -DPORTABLE_ENDIAN_NO_UINT_64_T -DPORTABLE_ENDIAN_MODIFIERS= -c -o obj/test_clang-c89-noint64-defhere.o test-functionality.c
	@${CLANG} -Weverything -Werror -pedantic -O2 -g -o bin/clang-c89-noint64-defhere${FILE_EXT} obj/test_clang-c89-noint64-defhere.o
	@echo " => success (GOOD, matches documentation)"

bin/clang-c89-noint64-inline${FILE_EXT}: test-functionality.c \
		portable-endian/portable-endian.h
	@echo "Building bin/clang-c89-noint64-inline${FILE_EXT} ..."
	@if \
		${CLANG} -Weverything -Werror -pedantic -O2 -g -std=c89 -DPORTABLE_ENDIAN_NO_UINT_64_T -DPORTABLE_ENDIAN_MODIFIERS="static inline" -c -o obj/test_clang-c89-noint64-inline.o test-functionality.c> /dev/null 2>&1 && \
		${CLANG} -Weverything -Werror -pedantic -O2 -g -o bin/clang-c89-noint64-inline${FILE_EXT} obj/test_clang-c89-noint64-inline.o > /dev/null 2>&1 ; \
	then \
		echo " => success (BAD, doesn't match documentation!)" ; \
		exit 1 ; \
	else \
		echo " => fail (GOOD, matches documentation)" ; \
	fi

bin/clang-c89-noint64-noflags${FILE_EXT}: test-functionality.c \
		portable-endian/portable-endian.h
	@echo "Building bin/clang-c89-noint64-noflags${FILE_EXT} ..."
	@${CLANG} -Weverything -Werror -pedantic -O2 -g -std=c89 -DPORTABLE_ENDIAN_NO_UINT_64_T -c -o obj/test_clang-c89-noint64-noflags.o test-functionality.c
	@${CLANG} -Weverything -Werror -pedantic -O2 -g -o bin/clang-c89-noint64-noflags${FILE_EXT} obj/test_clang-c89-noint64-noflags.o
	@echo " => success (GOOD, matches documentation)"

bin/clang-c99-allint-defext${FILE_EXT}: test-functionality.c as-static-lib.c \
		portable-endian/portable-endian.h
	@echo "Building bin/clang-c99-allint-defext${FILE_EXT} ..."
	@${CLANG} -Weverything -Werror -pedantic -O2 -g -std=c99 -DPORTABLE_ENDIAN_MODIFIERS= -c -o obj/lib_clang-c99-allint-defhere.o as-static-lib.c
	@${CLANG} -Weverything -Werror -pedantic -O2 -g -std=c99 -DPORTABLE_ENDIAN_MODIFIERS= -DPORTABLE_ENDIAN_DECLS_ONLY -c -o obj/test_clang-c99-allint-defext.o test-functionality.c
	@${CLANG} -Weverything -Werror -pedantic -O2 -g -o bin/clang-c99-allint-defext${FILE_EXT} obj/lib_clang-c99-allint-defhere.o obj/test_clang-c99-allint-defext.o
	@echo " => success (GOOD, matches documentation)"

bin/clang-c99-allint-defhere${FILE_EXT}: test-functionality.c \
		portable-endian/portable-endian.h
	@echo "Building bin/clang-c99-allint-defhere${FILE_EXT} ..."
	@${CLANG} -Weverything -Werror -pedantic -O2 -g -std=c99 -DPORTABLE_ENDIAN_MODIFIERS= -c -o obj/test_clang-c99-allint-defhere.o test-functionality.c
	@${CLANG} -Weverything -Werror -pedantic -O2 -g -o bin/clang-c99-allint-defhere${FILE_EXT} obj/test_clang-c99-allint-defhere.o
	@echo " => success (GOOD, matches documentation)"

bin/clang-c99-allint-inline${FILE_EXT}: test-functionality.c \
		portable-endian/portable-endian.h
	@echo "Building bin/clang-c99-allint-inline${FILE_EXT} ..."
	@${CLANG} -Weverything -Werror -pedantic -O2 -g -std=c99 -DPORTABLE_ENDIAN_MODIFIERS="static inline" -c -o obj/test_clang-c99-allint-inline.o test-functionality.c
	@${CLANG} -Weverything -Werror -pedantic -O2 -g -o bin/clang-c99-allint-inline${FILE_EXT} obj/test_clang-c99-allint-inline.o
	@echo " => success (GOOD, matches documentation)"

bin/clang-c99-allint-noflags${FILE_EXT}: test-functionality.c \
		portable-endian/portable-endian.h
	@echo "Building bin/clang-c99-allint-noflags${FILE_EXT} ..."
	@${CLANG} -Weverything -Werror -pedantic -O2 -g -std=c99 -c -o obj/test_clang-c99-allint-noflags.o test-functionality.c
	@${CLANG} -Weverything -Werror -pedantic -O2 -g -o bin/clang-c99-allint-noflags${FILE_EXT} obj/test_clang-c99-allint-noflags.o
	@echo " => success (GOOD, matches documentation)"

bin/clang-c99-noint64-defext${FILE_EXT}: test-functionality.c as-static-lib.c \
		portable-endian/portable-endian.h
	@echo "Building bin/clang-c99-noint64-defext${FILE_EXT} ..."
	@${CLANG} -Weverything -Werror -pedantic -O2 -g -std=c99 -DPORTABLE_ENDIAN_NO_UINT_64_T -DPORTABLE_ENDIAN_MODIFIERS= -c -o obj/lib_clang-c99-noint64-defhere.o as-static-lib.c
	@${CLANG} -Weverything -Werror -pedantic -O2 -g -std=c99 -DPORTABLE_ENDIAN_NO_UINT_64_T -DPORTABLE_ENDIAN_MODIFIERS= -DPORTABLE_ENDIAN_DECLS_ONLY -c -o obj/test_clang-c99-noint64-defext.o test-functionality.c
	@${CLANG} -Weverything -Werror -pedantic -O2 -g -o bin/clang-c99-noint64-defext${FILE_EXT} obj/lib_clang-c99-noint64-defhere.o obj/test_clang-c99-noint64-defext.o
	@echo " => success (GOOD, matches documentation)"

bin/clang-c99-noint64-defhere${FILE_EXT}: test-functionality.c \
		portable-endian/portable-endian.h
	@echo "Building bin/clang-c99-noint64-defhere${FILE_EXT} ..."
	@${CLANG} -Weverything -Werror -pedantic -O2 -g -std=c99 -DPORTABLE_ENDIAN_NO_UINT_64_T -DPORTABLE_ENDIAN_MODIFIERS= -c -o obj/test_clang-c99-noint64-defhere.o test-functionality.c
	@${CLANG} -Weverything -Werror -pedantic -O2 -g -o bin/clang-c99-noint64-defhere${FILE_EXT} obj/test_clang-c99-noint64-defhere.o
	@echo " => success (GOOD, matches documentation)"

bin/clang-c99-noint64-inline${FILE_EXT}: test-functionality.c \
		portable-endian/portable-endian.h
	@echo "Building bin/clang-c99-noint64-inline${FILE_EXT} ..."
	@${CLANG} -Weverything -Werror -pedantic -O2 -g -std=c99 -DPORTABLE_ENDIAN_NO_UINT_64_T -DPORTABLE_ENDIAN_MODIFIERS="static inline" -c -o obj/test_clang-c99-noint64-inline.o test-functionality.c
	@${CLANG} -Weverything -Werror -pedantic -O2 -g -o bin/clang-c99-noint64-inline${FILE_EXT} obj/test_clang-c99-noint64-inline.o
	@echo " => success (GOOD, matches documentation)"

bin/clang-c99-noint64-noflags${FILE_EXT}: test-functionality.c \
		portable-endian/portable-endian.h
	@echo "Building bin/clang-c99-noint64-noflags${FILE_EXT} ..."
	@${CLANG} -Weverything -Werror -pedantic -O2 -g -std=c99 -DPORTABLE_ENDIAN_NO_UINT_64_T -c -o obj/test_clang-c99-noint64-noflags.o test-functionality.c
	@${CLANG} -Weverything -Werror -pedantic -O2 -g -o bin/clang-c99-noint64-noflags${FILE_EXT} obj/test_clang-c99-noint64-noflags.o
	@echo " => success (GOOD, matches documentation)"

bin/clang-gnu89-allint-defext${FILE_EXT}: test-functionality.c as-static-lib.c \
		portable-endian/portable-endian.h
	@echo "Building bin/clang-gnu89-allint-defext${FILE_EXT} ..."
	@${CLANG} -Weverything -Werror -pedantic -O2 -g -std=gnu89 -DPORTABLE_ENDIAN_MODIFIERS= -c -o obj/lib_clang-gnu89-allint-defhere.o as-static-lib.c
	@${CLANG} -Weverything -Werror -pedantic -O2 -g -std=gnu89 -DPORTABLE_ENDIAN_MODIFIERS= -DPORTABLE_ENDIAN_DECLS_ONLY -c -o obj/test_clang-gnu89-allint-defext.o test-functionality.c
	@${CLANG} -Weverything -Werror -pedantic -O2 -g -o bin/clang-gnu89-allint-defext${FILE_EXT} obj/lib_clang-gnu89-allint-defhere.o obj/test_clang-gnu89-allint-defext.o
	@echo " => success (GOOD, matches documentation)"

bin/clang-gnu89-allint-defhere${FILE_EXT}: test-functionality.c \
		portable-endian/portable-endian.h
	@echo "Building bin/clang-gnu89-allint-defhere${FILE_EXT} ..."
	@${CLANG} -Weverything -Werror -pedantic -O2 -g -std=gnu89 -DPORTABLE_ENDIAN_MODIFIERS= -c -o obj/test_clang-gnu89-allint-defhere.o test-functionality.c
	@${CLANG} -Weverything -Werror -pedantic -O2 -g -o bin/clang-gnu89-allint-defhere${FILE_EXT} obj/test_clang-gnu89-allint-defhere.o
	@echo " => success (GOOD, matches documentation)"

bin/clang-gnu89-allint-inline${FILE_EXT}: test-functionality.c \
		portable-endian/portable-endian.h
	@echo "Building bin/clang-gnu89-allint-inline${FILE_EXT} ..."
	@if \
		${CLANG} -Weverything -Werror -pedantic -O2 -g -std=gnu89 -DPORTABLE_ENDIAN_MODIFIERS="static inline" -c -o obj/test_clang-gnu89-allint-inline.o test-functionality.c> /dev/null 2>&1 && \
		${CLANG} -Weverything -Werror -pedantic -O2 -g -o bin/clang-gnu89-allint-inline${FILE_EXT} obj/test_clang-gnu89-allint-inline.o > /dev/null 2>&1 ; \
	then \
		echo " => success (BAD, doesn't match documentation!)" ; \
		exit 1 ; \
	else \
		echo " => fail (GOOD, matches documentation)" ; \
	fi

bin/clang-gnu89-allint-noflags${FILE_EXT}: test-functionality.c \
		portable-endian/portable-endian.h
	@echo "Building bin/clang-gnu89-allint-noflags${FILE_EXT} ..."
	@${CLANG} -Weverything -Werror -pedantic -O2 -g -std=gnu89 -c -o obj/test_clang-gnu89-allint-noflags.o test-functionality.c
	@${CLANG} -Weverything -Werror -pedantic -O2 -g -o bin/clang-gnu89-allint-noflags${FILE_EXT} obj/test_clang-gnu89-allint-noflags.o
	@echo " => success (GOOD, matches documentation)"

bin/clang-gnu89-noint64-defext${FILE_EXT}: test-functionality.c as-static-lib.c \
		portable-endian/portable-endian.h
	@echo "Building bin/clang-gnu89-noint64-defext${FILE_EXT} ..."
	@${CLANG} -Weverything -Werror -pedantic -O2 -g -std=gnu89 -DPORTABLE_ENDIAN_NO_UINT_64_T -DPORTABLE_ENDIAN_MODIFIERS= -c -o obj/lib_clang-gnu89-noint64-defhere.o as-static-lib.c
	@${CLANG} -Weverything -Werror -pedantic -O2 -g -std=gnu89 -DPORTABLE_ENDIAN_NO_UINT_64_T -DPORTABLE_ENDIAN_MODIFIERS= -DPORTABLE_ENDIAN_DECLS_ONLY -c -o obj/test_clang-gnu89-noint64-defext.o test-functionality.c
	@${CLANG} -Weverything -Werror -pedantic -O2 -g -o bin/clang-gnu89-noint64-defext${FILE_EXT} obj/lib_clang-gnu89-noint64-defhere.o obj/test_clang-gnu89-noint64-defext.o
	@echo " => success (GOOD, matches documentation)"

bin/clang-gnu89-noint64-defhere${FILE_EXT}: test-functionality.c \
		portable-endian/portable-endian.h
	@echo "Building bin/clang-gnu89-noint64-defhere${FILE_EXT} ..."
	@${CLANG} -Weverything -Werror -pedantic -O2 -g -std=gnu89 -DPORTABLE_ENDIAN_NO_UINT_64_T -DPORTABLE_ENDIAN_MODIFIERS= -c -o obj/test_clang-gnu89-noint64-defhere.o test-functionality.c
	@${CLANG} -Weverything -Werror -pedantic -O2 -g -o bin/clang-gnu89-noint64-defhere${FILE_EXT} obj/test_clang-gnu89-noint64-defhere.o
	@echo " => success (GOOD, matches documentation)"

bin/clang-gnu89-noint64-inline${FILE_EXT}: test-functionality.c \
		portable-endian/portable-endian.h
	@echo "Building bin/clang-gnu89-noint64-inline${FILE_EXT} ..."
	@if \
		${CLANG} -Weverything -Werror -pedantic -O2 -g -std=gnu89 -DPORTABLE_ENDIAN_NO_UINT_64_T -DPORTABLE_ENDIAN_MODIFIERS="static inline" -c -o obj/test_clang-gnu89-noint64-inline.o test-functionality.c> /dev/null 2>&1 && \
		${CLANG} -Weverything -Werror -pedantic -O2 -g -o bin/clang-gnu89-noint64-inline${FILE_EXT} obj/test_clang-gnu89-noint64-inline.o > /dev/null 2>&1 ; \
	then \
		echo " => success (BAD, doesn't match documentation!)" ; \
		exit 1 ; \
	else \
		echo " => fail (GOOD, matches documentation)" ; \
	fi

bin/clang-gnu89-noint64-noflags${FILE_EXT}: test-functionality.c \
		portable-endian/portable-endian.h
	@echo "Building bin/clang-gnu89-noint64-noflags${FILE_EXT} ..."
	@${CLANG} -Weverything -Werror -pedantic -O2 -g -std=gnu89 -DPORTABLE_ENDIAN_NO_UINT_64_T -c -o obj/test_clang-gnu89-noint64-noflags.o test-functionality.c
	@${CLANG} -Weverything -Werror -pedantic -O2 -g -o bin/clang-gnu89-noint64-noflags${FILE_EXT} obj/test_clang-gnu89-noint64-noflags.o
	@echo " => success (GOOD, matches documentation)"

bin/clang-gnu99-allint-defext${FILE_EXT}: test-functionality.c as-static-lib.c \
		portable-endian/portable-endian.h
	@echo "Building bin/clang-gnu99-allint-defext${FILE_EXT} ..."
	@${CLANG} -Weverything -Werror -pedantic -O2 -g -std=gnu99 -DPORTABLE_ENDIAN_MODIFIERS= -c -o obj/lib_clang-gnu99-allint-defhere.o as-static-lib.c
	@${CLANG} -Weverything -Werror -pedantic -O2 -g -std=gnu99 -DPORTABLE_ENDIAN_MODIFIERS= -DPORTABLE_ENDIAN_DECLS_ONLY -c -o obj/test_clang-gnu99-allint-defext.o test-functionality.c
	@${CLANG} -Weverything -Werror -pedantic -O2 -g -o bin/clang-gnu99-allint-defext${FILE_EXT} obj/lib_clang-gnu99-allint-defhere.o obj/test_clang-gnu99-allint-defext.o
	@echo " => success (GOOD, matches documentation)"

bin/clang-gnu99-allint-defhere${FILE_EXT}: test-functionality.c \
		portable-endian/portable-endian.h
	@echo "Building bin/clang-gnu99-allint-defhere${FILE_EXT} ..."
	@${CLANG} -Weverything -Werror -pedantic -O2 -g -std=gnu99 -DPORTABLE_ENDIAN_MODIFIERS= -c -o obj/test_clang-gnu99-allint-defhere.o test-functionality.c
	@${CLANG} -Weverything -Werror -pedantic -O2 -g -o bin/clang-gnu99-allint-defhere${FILE_EXT} obj/test_clang-gnu99-allint-defhere.o
	@echo " => success (GOOD, matches documentation)"

bin/clang-gnu99-allint-inline${FILE_EXT}: test-functionality.c \
		portable-endian/portable-endian.h
	@echo "Building bin/clang-gnu99-allint-inline${FILE_EXT} ..."
	@${CLANG} -Weverything -Werror -pedantic -O2 -g -std=gnu99 -DPORTABLE_ENDIAN_MODIFIERS="static inline" -c -o obj/test_clang-gnu99-allint-inline.o test-functionality.c
	@${CLANG} -Weverything -Werror -pedantic -O2 -g -o bin/clang-gnu99-allint-inline${FILE_EXT} obj/test_clang-gnu99-allint-inline.o
	@echo " => success (GOOD, matches documentation)"

bin/clang-gnu99-allint-noflags${FILE_EXT}: test-functionality.c \
		portable-endian/portable-endian.h
	@echo "Building bin/clang-gnu99-allint-noflags${FILE_EXT} ..."
	@${CLANG} -Weverything -Werror -pedantic -O2 -g -std=gnu99 -c -o obj/test_clang-gnu99-allint-noflags.o test-functionality.c
	@${CLANG} -Weverything -Werror -pedantic -O2 -g -o bin/clang-gnu99-allint-noflags${FILE_EXT} obj/test_clang-gnu99-allint-noflags.o
	@echo " => success (GOOD, matches documentation)"

bin/clang-gnu99-noint64-defext${FILE_EXT}: test-functionality.c as-static-lib.c \
		portable-endian/portable-endian.h
	@echo "Building bin/clang-gnu99-noint64-defext${FILE_EXT} ..."
	@${CLANG} -Weverything -Werror -pedantic -O2 -g -std=gnu99 -DPORTABLE_ENDIAN_NO_UINT_64_T -DPORTABLE_ENDIAN_MODIFIERS= -c -o obj/lib_clang-gnu99-noint64-defhere.o as-static-lib.c
	@${CLANG} -Weverything -Werror -pedantic -O2 -g -std=gnu99 -DPORTABLE_ENDIAN_NO_UINT_64_T -DPORTABLE_ENDIAN_MODIFIERS= -DPORTABLE_ENDIAN_DECLS_ONLY -c -o obj/test_clang-gnu99-noint64-defext.o test-functionality.c
	@${CLANG} -Weverything -Werror -pedantic -O2 -g -o bin/clang-gnu99-noint64-defext${FILE_EXT} obj/lib_clang-gnu99-noint64-defhere.o obj/test_clang-gnu99-noint64-defext.o
	@echo " => success (GOOD, matches documentation)"

bin/clang-gnu99-noint64-defhere${FILE_EXT}: test-functionality.c \
		portable-endian/portable-endian.h
	@echo "Building bin/clang-gnu99-noint64-defhere${FILE_EXT} ..."
	@${CLANG} -Weverything -Werror -pedantic -O2 -g -std=gnu99 -DPORTABLE_ENDIAN_NO_UINT_64_T -DPORTABLE_ENDIAN_MODIFIERS= -c -o obj/test_clang-gnu99-noint64-defhere.o test-functionality.c
	@${CLANG} -Weverything -Werror -pedantic -O2 -g -o bin/clang-gnu99-noint64-defhere${FILE_EXT} obj/test_clang-gnu99-noint64-defhere.o
	@echo " => success (GOOD, matches documentation)"

bin/clang-gnu99-noint64-inline${FILE_EXT}: test-functionality.c \
		portable-endian/portable-endian.h
	@echo "Building bin/clang-gnu99-noint64-inline${FILE_EXT} ..."
	@${CLANG} -Weverything -Werror -pedantic -O2 -g -std=gnu99 -DPORTABLE_ENDIAN_NO_UINT_64_T -DPORTABLE_ENDIAN_MODIFIERS="static inline" -c -o obj/test_clang-gnu99-noint64-inline.o test-functionality.c
	@${CLANG} -Weverything -Werror -pedantic -O2 -g -o bin/clang-gnu99-noint64-inline${FILE_EXT} obj/test_clang-gnu99-noint64-inline.o
	@echo " => success (GOOD, matches documentation)"

bin/clang-gnu99-noint64-noflags${FILE_EXT}: test-functionality.c \
		portable-endian/portable-endian.h
	@echo "Building bin/clang-gnu99-noint64-noflags${FILE_EXT} ..."
	@${CLANG} -Weverything -Werror -pedantic -O2 -g -std=gnu99 -DPORTABLE_ENDIAN_NO_UINT_64_T -c -o obj/test_clang-gnu99-noint64-noflags.o test-functionality.c
	@${CLANG} -Weverything -Werror -pedantic -O2 -g -o bin/clang-gnu99-noint64-noflags${FILE_EXT} obj/test_clang-gnu99-noint64-noflags.o
	@echo " => success (GOOD, matches documentation)"

bin/gcc-c11-allint-defext${FILE_EXT}: test-functionality.c as-static-lib.c \
		portable-endian/portable-endian.h
	@echo "Building bin/gcc-c11-allint-defext${FILE_EXT} ..."
	@if ${GCC} -std=c11 --target-help >/dev/null 2>&1 || ${GCC} --version 2>/dev/null | grep -qc '^Apple.*clang' ; \
	then \
		${GCC} -Wall -Wextra -Werror -pedantic -O2 -g -std=c11 -DPORTABLE_ENDIAN_MODIFIERS= -c -o obj/lib_gcc-c11-allint-defhere.o as-static-lib.c && \
		${GCC} -Wall -Wextra -Werror -pedantic -O2 -g -std=c11 -DPORTABLE_ENDIAN_MODIFIERS= -DPORTABLE_ENDIAN_DECLS_ONLY -c -o obj/test_gcc-c11-allint-defext.o test-functionality.c && \
		${GCC} -Wall -Wextra -Werror -pedantic -O2 -g -o bin/gcc-c11-allint-defext${FILE_EXT} obj/lib_gcc-c11-allint-defhere.o obj/test_gcc-c11-allint-defext.o && \
		echo " => success (GOOD, matches documentation)" ; \
	else \
		if \
			${GCC} -Wall -Wextra -Werror -pedantic -O2 -g -std=c11 -DPORTABLE_ENDIAN_MODIFIERS= -c -o obj/lib_gcc-c11-allint-defhere.o as-static-lib.c> /dev/null 2>&1 && \
			${GCC} -Wall -Wextra -Werror -pedantic -O2 -g -std=c11 -DPORTABLE_ENDIAN_MODIFIERS= -DPORTABLE_ENDIAN_DECLS_ONLY -c -o obj/test_gcc-c11-allint-defext.o test-functionality.c> /dev/null 2>&1 && \
			${GCC} -Wall -Wextra -Werror -pedantic -O2 -g -o bin/gcc-c11-allint-defext${FILE_EXT} obj/lib_gcc-c11-allint-defhere.o obj/test_gcc-c11-allint-defext.o > /dev/null 2>&1 ; \
		then \
			echo " => success (BAD, doesn't match documentation!)" ; \
			exit 1 ; \
		else \
			echo " => fail (GOOD, matches documentation)" ; \
		fi ; \
	fi

bin/gcc-c11-allint-defhere${FILE_EXT}: test-functionality.c \
		portable-endian/portable-endian.h
	@echo "Building bin/gcc-c11-allint-defhere${FILE_EXT} ..."
	@if ${GCC} -std=c11 --target-help >/dev/null 2>&1 || ${GCC} --version 2>/dev/null | grep -qc '^Apple.*clang' ; \
	then \
		${GCC} -Wall -Wextra -Werror -pedantic -O2 -g -std=c11 -DPORTABLE_ENDIAN_MODIFIERS= -c -o obj/test_gcc-c11-allint-defhere.o test-functionality.c && \
		${GCC} -Wall -Wextra -Werror -pedantic -O2 -g -o bin/gcc-c11-allint-defhere${FILE_EXT} obj/test_gcc-c11-allint-defhere.o && \
		echo " => success (GOOD, matches documentation)" ; \
	else \
		if \
			${GCC} -Wall -Wextra -Werror -pedantic -O2 -g -std=c11 -DPORTABLE_ENDIAN_MODIFIERS= -c -o obj/test_gcc-c11-allint-defhere.o test-functionality.c> /dev/null 2>&1 && \
			${GCC} -Wall -Wextra -Werror -pedantic -O2 -g -o bin/gcc-c11-allint-defhere${FILE_EXT} obj/test_gcc-c11-allint-defhere.o > /dev/null 2>&1 ; \
		then \
			echo " => success (BAD, doesn't match documentation!)" ; \
			exit 1 ; \
		else \
			echo " => fail (GOOD, matches documentation)" ; \
		fi ; \
	fi

bin/gcc-c11-allint-inline${FILE_EXT}: test-functionality.c \
		portable-endian/portable-endian.h
	@echo "Building bin/gcc-c11-allint-inline${FILE_EXT} ..."
	@if ${GCC} -std=c11 --target-help >/dev/null 2>&1 || ${GCC} --version 2>/dev/null | grep -qc '^Apple.*clang' ; \
	then \
		${GCC} -Wall -Wextra -Werror -pedantic -O2 -g -std=c11 -DPORTABLE_ENDIAN_MODIFIERS="static inline" -c -o obj/test_gcc-c11-allint-inline.o test-functionality.c && \
		${GCC} -Wall -Wextra -Werror -pedantic -O2 -g -o bin/gcc-c11-allint-inline${FILE_EXT} obj/test_gcc-c11-allint-inline.o && \
		echo " => success (GOOD, matches documentation)" ; \
	else \
		if \
			${GCC} -Wall -Wextra -Werror -pedantic -O2 -g -std=c11 -DPORTABLE_ENDIAN_MODIFIERS="static inline" -c -o obj/test_gcc-c11-allint-inline.o test-functionality.c> /dev/null 2>&1 && \
			${GCC} -Wall -Wextra -Werror -pedantic -O2 -g -o bin/gcc-c11-allint-inline${FILE_EXT} obj/test_gcc-c11-allint-inline.o > /dev/null 2>&1 ; \
		then \
			echo " => success (BAD, doesn't match documentation!)" ; \
			exit 1 ; \
		else \
			echo " => fail (GOOD, matches documentation)" ; \
		fi ; \
	fi

bin/gcc-c11-allint-noflags${FILE_EXT}: test-functionality.c \
		portable-endian/portable-endian.h
	@echo "Building bin/gcc-c11-allint-noflags${FILE_EXT} ..."
	@if ${GCC} -std=c11 --target-help >/dev/null 2>&1 || ${GCC} --version 2>/dev/null | grep -qc '^Apple.*clang' ; \
	then \
		${GCC} -Wall -Wextra -Werror -pedantic -O2 -g -std=c11 -c -o obj/test_gcc-c11-allint-noflags.o test-functionality.c && \
		${GCC} -Wall -Wextra -Werror -pedantic -O2 -g -o bin/gcc-c11-allint-noflags${FILE_EXT} obj/test_gcc-c11-allint-noflags.o && \
		echo " => success (GOOD, matches documentation)" ; \
	else \
		if \
			${GCC} -Wall -Wextra -Werror -pedantic -O2 -g -std=c11 -c -o obj/test_gcc-c11-allint-noflags.o test-functionality.c> /dev/null 2>&1 && \
			${GCC} -Wall -Wextra -Werror -pedantic -O2 -g -o bin/gcc-c11-allint-noflags${FILE_EXT} obj/test_gcc-c11-allint-noflags.o > /dev/null 2>&1 ; \
		then \
			echo " => success (BAD, doesn't match documentation!)" ; \
			exit 1 ; \
		else \
			echo " => fail (GOOD, matches documentation)" ; \
		fi ; \
	fi

bin/gcc-c11-noint64-defext${FILE_EXT}: test-functionality.c as-static-lib.c \
		portable-endian/portable-endian.h
	@echo "Building bin/gcc-c11-noint64-defext${FILE_EXT} ..."
	@if ${GCC} -std=c11 --target-help >/dev/null 2>&1 || ${GCC} --version 2>/dev/null | grep -qc '^Apple.*clang' ; \
	then \
		${GCC} -Wall -Wextra -Werror -pedantic -O2 -g -std=c11 -DPORTABLE_ENDIAN_NO_UINT_64_T -DPORTABLE_ENDIAN_MODIFIERS= -c -o obj/lib_gcc-c11-noint64-defhere.o as-static-lib.c && \
		${GCC} -Wall -Wextra -Werror -pedantic -O2 -g -std=c11 -DPORTABLE_ENDIAN_NO_UINT_64_T -DPORTABLE_ENDIAN_MODIFIERS= -DPORTABLE_ENDIAN_DECLS_ONLY -c -o obj/test_gcc-c11-noint64-defext.o test-functionality.c && \
		${GCC} -Wall -Wextra -Werror -pedantic -O2 -g -o bin/gcc-c11-noint64-defext${FILE_EXT} obj/lib_gcc-c11-noint64-defhere.o obj/test_gcc-c11-noint64-defext.o && \
		echo " => success (GOOD, matches documentation)" ; \
	else \
		if \
			${GCC} -Wall -Wextra -Werror -pedantic -O2 -g -std=c11 -DPORTABLE_ENDIAN_NO_UINT_64_T -DPORTABLE_ENDIAN_MODIFIERS= -c -o obj/lib_gcc-c11-noint64-defhere.o as-static-lib.c> /dev/null 2>&1 && \
			${GCC} -Wall -Wextra -Werror -pedantic -O2 -g -std=c11 -DPORTABLE_ENDIAN_NO_UINT_64_T -DPORTABLE_ENDIAN_MODIFIERS= -DPORTABLE_ENDIAN_DECLS_ONLY -c -o obj/test_gcc-c11-noint64-defext.o test-functionality.c> /dev/null 2>&1 && \
			${GCC} -Wall -Wextra -Werror -pedantic -O2 -g -o bin/gcc-c11-noint64-defext${FILE_EXT} obj/lib_gcc-c11-noint64-defhere.o obj/test_gcc-c11-noint64-defext.o > /dev/null 2>&1 ; \
		then \
			echo " => success (BAD, doesn't match documentation!)" ; \
			exit 1 ; \
		else \
			echo " => fail (GOOD, matches documentation)" ; \
		fi ; \
	fi

bin/gcc-c11-noint64-defhere${FILE_EXT}: test-functionality.c \
		portable-endian/portable-endian.h
	@echo "Building bin/gcc-c11-noint64-defhere${FILE_EXT} ..."
	@if ${GCC} -std=c11 --target-help >/dev/null 2>&1 || ${GCC} --version 2>/dev/null | grep -qc '^Apple.*clang' ; \
	then \
		${GCC} -Wall -Wextra -Werror -pedantic -O2 -g -std=c11 -DPORTABLE_ENDIAN_NO_UINT_64_T -DPORTABLE_ENDIAN_MODIFIERS= -c -o obj/test_gcc-c11-noint64-defhere.o test-functionality.c && \
		${GCC} -Wall -Wextra -Werror -pedantic -O2 -g -o bin/gcc-c11-noint64-defhere${FILE_EXT} obj/test_gcc-c11-noint64-defhere.o && \
		echo " => success (GOOD, matches documentation)" ; \
	else \
		if \
			${GCC} -Wall -Wextra -Werror -pedantic -O2 -g -std=c11 -DPORTABLE_ENDIAN_NO_UINT_64_T -DPORTABLE_ENDIAN_MODIFIERS= -c -o obj/test_gcc-c11-noint64-defhere.o test-functionality.c> /dev/null 2>&1 && \
			${GCC} -Wall -Wextra -Werror -pedantic -O2 -g -o bin/gcc-c11-noint64-defhere${FILE_EXT} obj/test_gcc-c11-noint64-defhere.o > /dev/null 2>&1 ; \
		then \
			echo " => success (BAD, doesn't match documentation!)" ; \
			exit 1 ; \
		else \
			echo " => fail (GOOD, matches documentation)" ; \
		fi ; \
	fi

bin/gcc-c11-noint64-inline${FILE_EXT}: test-functionality.c \
		portable-endian/portable-endian.h
	@echo "Building bin/gcc-c11-noint64-inline${FILE_EXT} ..."
	@if ${GCC} -std=c11 --target-help >/dev/null 2>&1 || ${GCC} --version 2>/dev/null | grep -qc '^Apple.*clang' ; \
	then \
		${GCC} -Wall -Wextra -Werror -pedantic -O2 -g -std=c11 -DPORTABLE_ENDIAN_NO_UINT_64_T -DPORTABLE_ENDIAN_MODIFIERS="static inline" -c -o obj/test_gcc-c11-noint64-inline.o test-functionality.c && \
		${GCC} -Wall -Wextra -Werror -pedantic -O2 -g -o bin/gcc-c11-noint64-inline${FILE_EXT} obj/test_gcc-c11-noint64-inline.o && \
		echo " => success (GOOD, matches documentation)" ; \
	else \
		if \
			${GCC} -Wall -Wextra -Werror -pedantic -O2 -g -std=c11 -DPORTABLE_ENDIAN_NO_UINT_64_T -DPORTABLE_ENDIAN_MODIFIERS="static inline" -c -o obj/test_gcc-c11-noint64-inline.o test-functionality.c> /dev/null 2>&1 && \
			${GCC} -Wall -Wextra -Werror -pedantic -O2 -g -o bin/gcc-c11-noint64-inline${FILE_EXT} obj/test_gcc-c11-noint64-inline.o > /dev/null 2>&1 ; \
		then \
			echo " => success (BAD, doesn't match documentation!)" ; \
			exit 1 ; \
		else \
			echo " => fail (GOOD, matches documentation)" ; \
		fi ; \
	fi

bin/gcc-c11-noint64-noflags${FILE_EXT}: test-functionality.c \
		portable-endian/portable-endian.h
	@echo "Building bin/gcc-c11-noint64-noflags${FILE_EXT} ..."
	@if ${GCC} -std=c11 --target-help >/dev/null 2>&1 || ${GCC} --version 2>/dev/null | grep -qc '^Apple.*clang' ; \
	then \
		${GCC} -Wall -Wextra -Werror -pedantic -O2 -g -std=c11 -DPORTABLE_ENDIAN_NO_UINT_64_T -c -o obj/test_gcc-c11-noint64-noflags.o test-functionality.c && \
		${GCC} -Wall -Wextra -Werror -pedantic -O2 -g -o bin/gcc-c11-noint64-noflags${FILE_EXT} obj/test_gcc-c11-noint64-noflags.o && \
		echo " => success (GOOD, matches documentation)" ; \
	else \
		if \
			${GCC} -Wall -Wextra -Werror -pedantic -O2 -g -std=c11 -DPORTABLE_ENDIAN_NO_UINT_64_T -c -o obj/test_gcc-c11-noint64-noflags.o test-functionality.c> /dev/null 2>&1 && \
			${GCC} -Wall -Wextra -Werror -pedantic -O2 -g -o bin/gcc-c11-noint64-noflags${FILE_EXT} obj/test_gcc-c11-noint64-noflags.o > /dev/null 2>&1 ; \
		then \
			echo " => success (BAD, doesn't match documentation!)" ; \
			exit 1 ; \
		else \
			echo " => fail (GOOD, matches documentation)" ; \
		fi ; \
	fi

bin/gcc-c89-allint-defext${FILE_EXT}: test-functionality.c as-static-lib.c \
		portable-endian/portable-endian.h
	@echo "Building bin/gcc-c89-allint-defext${FILE_EXT} ..."
	@${GCC} -Wall -Wextra -Werror -pedantic -O2 -g -std=c89 -DPORTABLE_ENDIAN_MODIFIERS= -c -o obj/lib_gcc-c89-allint-defhere.o as-static-lib.c
	@${GCC} -Wall -Wextra -Werror -pedantic -O2 -g -std=c89 -DPORTABLE_ENDIAN_MODIFIERS= -DPORTABLE_ENDIAN_DECLS_ONLY -c -o obj/test_gcc-c89-allint-defext.o test-functionality.c
	@${GCC} -Wall -Wextra -Werror -pedantic -O2 -g -o bin/gcc-c89-allint-defext${FILE_EXT} obj/lib_gcc-c89-allint-defhere.o obj/test_gcc-c89-allint-defext.o
	@echo " => success (GOOD, matches documentation)"

bin/gcc-c89-allint-defhere${FILE_EXT}: test-functionality.c \
		portable-endian/portable-endian.h
	@echo "Building bin/gcc-c89-allint-defhere${FILE_EXT} ..."
	@${GCC} -Wall -Wextra -Werror -pedantic -O2 -g -std=c89 -DPORTABLE_ENDIAN_MODIFIERS= -c -o obj/test_gcc-c89-allint-defhere.o test-functionality.c
	@${GCC} -Wall -Wextra -Werror -pedantic -O2 -g -o bin/gcc-c89-allint-defhere${FILE_EXT} obj/test_gcc-c89-allint-defhere.o
	@echo " => success (GOOD, matches documentation)"

bin/gcc-c89-allint-inline${FILE_EXT}: test-functionality.c \
		portable-endian/portable-endian.h
	@echo "Building bin/gcc-c89-allint-inline${FILE_EXT} ..."
	@if \
		${GCC} -Wall -Wextra -Werror -pedantic -O2 -g -std=c89 -DPORTABLE_ENDIAN_MODIFIERS="static inline" -c -o obj/test_gcc-c89-allint-inline.o test-functionality.c> /dev/null 2>&1 && \
		${GCC} -Wall -Wextra -Werror -pedantic -O2 -g -o bin/gcc-c89-allint-inline${FILE_EXT} obj/test_gcc-c89-allint-inline.o > /dev/null 2>&1 ; \
	then \
		echo " => success (BAD, doesn't match documentation!)" ; \
		exit 1 ; \
	else \
		echo " => fail (GOOD, matches documentation)" ; \
	fi

bin/gcc-c89-allint-noflags${FILE_EXT}: test-functionality.c \
		portable-endian/portable-endian.h
	@echo "Building bin/gcc-c89-allint-noflags${FILE_EXT} ..."
	@${GCC} -Wall -Wextra -Werror -pedantic -O2 -g -std=c89 -c -o obj/test_gcc-c89-allint-noflags.o test-functionality.c
	@${GCC} -Wall -Wextra -Werror -pedantic -O2 -g -o bin/gcc-c89-allint-noflags${FILE_EXT} obj/test_gcc-c89-allint-noflags.o
	@echo " => success (GOOD, matches documentation)"

bin/gcc-c89-noint64-defext${FILE_EXT}: test-functionality.c as-static-lib.c \
		portable-endian/portable-endian.h
	@echo "Building bin/gcc-c89-noint64-defext${FILE_EXT} ..."
	@${GCC} -Wall -Wextra -Werror -pedantic -O2 -g -std=c89 -DPORTABLE_ENDIAN_NO_UINT_64_T -DPORTABLE_ENDIAN_MODIFIERS= -c -o obj/lib_gcc-c89-noint64-defhere.o as-static-lib.c
	@${GCC} -Wall -Wextra -Werror -pedantic -O2 -g -std=c89 -DPORTABLE_ENDIAN_NO_UINT_64_T -DPORTABLE_ENDIAN_MODIFIERS= -DPORTABLE_ENDIAN_DECLS_ONLY -c -o obj/test_gcc-c89-noint64-defext.o test-functionality.c
	@${GCC} -Wall -Wextra -Werror -pedantic -O2 -g -o bin/gcc-c89-noint64-defext${FILE_EXT} obj/lib_gcc-c89-noint64-defhere.o obj/test_gcc-c89-noint64-defext.o
	@echo " => success (GOOD, matches documentation)"

bin/gcc-c89-noint64-defhere${FILE_EXT}: test-functionality.c \
		portable-endian/portable-endian.h
	@echo "Building bin/gcc-c89-noint64-defhere${FILE_EXT} ..."
	@${GCC} -Wall -Wextra -Werror -pedantic -O2 -g -std=c89 -DPORTABLE_ENDIAN_NO_UINT_64_T -DPORTABLE_ENDIAN_MODIFIERS= -c -o obj/test_gcc-c89-noint64-defhere.o test-functionality.c
	@${GCC} -Wall -Wextra -Werror -pedantic -O2 -g -o bin/gcc-c89-noint64-defhere${FILE_EXT} obj/test_gcc-c89-noint64-defhere.o
	@echo " => success (GOOD, matches documentation)"

bin/gcc-c89-noint64-inline${FILE_EXT}: test-functionality.c \
		portable-endian/portable-endian.h
	@echo "Building bin/gcc-c89-noint64-inline${FILE_EXT} ..."
	@if \
		${GCC} -Wall -Wextra -Werror -pedantic -O2 -g -std=c89 -DPORTABLE_ENDIAN_NO_UINT_64_T -DPORTABLE_ENDIAN_MODIFIERS="static inline" -c -o obj/test_gcc-c89-noint64-inline.o test-functionality.c> /dev/null 2>&1 && \
		${GCC} -Wall -Wextra -Werror -pedantic -O2 -g -o bin/gcc-c89-noint64-inline${FILE_EXT} obj/test_gcc-c89-noint64-inline.o > /dev/null 2>&1 ; \
	then \
		echo " => success (BAD, doesn't match documentation!)" ; \
		exit 1 ; \
	else \
		echo " => fail (GOOD, matches documentation)" ; \
	fi

bin/gcc-c89-noint64-noflags${FILE_EXT}: test-functionality.c \
		portable-endian/portable-endian.h
	@echo "Building bin/gcc-c89-noint64-noflags${FILE_EXT} ..."
	@${GCC} -Wall -Wextra -Werror -pedantic -O2 -g -std=c89 -DPORTABLE_ENDIAN_NO_UINT_64_T -c -o obj/test_gcc-c89-noint64-noflags.o test-functionality.c
	@${GCC} -Wall -Wextra -Werror -pedantic -O2 -g -o bin/gcc-c89-noint64-noflags${FILE_EXT} obj/test_gcc-c89-noint64-noflags.o
	@echo " => success (GOOD, matches documentation)"

bin/gcc-c99-allint-defext${FILE_EXT}: test-functionality.c as-static-lib.c \
		portable-endian/portable-endian.h
	@echo "Building bin/gcc-c99-allint-defext${FILE_EXT} ..."
	@${GCC} -Wall -Wextra -Werror -pedantic -O2 -g -std=c99 -DPORTABLE_ENDIAN_MODIFIERS= -c -o obj/lib_gcc-c99-allint-defhere.o as-static-lib.c
	@${GCC} -Wall -Wextra -Werror -pedantic -O2 -g -std=c99 -DPORTABLE_ENDIAN_MODIFIERS= -DPORTABLE_ENDIAN_DECLS_ONLY -c -o obj/test_gcc-c99-allint-defext.o test-functionality.c
	@${GCC} -Wall -Wextra -Werror -pedantic -O2 -g -o bin/gcc-c99-allint-defext${FILE_EXT} obj/lib_gcc-c99-allint-defhere.o obj/test_gcc-c99-allint-defext.o
	@echo " => success (GOOD, matches documentation)"

bin/gcc-c99-allint-defhere${FILE_EXT}: test-functionality.c \
		portable-endian/portable-endian.h
	@echo "Building bin/gcc-c99-allint-defhere${FILE_EXT} ..."
	@${GCC} -Wall -Wextra -Werror -pedantic -O2 -g -std=c99 -DPORTABLE_ENDIAN_MODIFIERS= -c -o obj/test_gcc-c99-allint-defhere.o test-functionality.c
	@${GCC} -Wall -Wextra -Werror -pedantic -O2 -g -o bin/gcc-c99-allint-defhere${FILE_EXT} obj/test_gcc-c99-allint-defhere.o
	@echo " => success (GOOD, matches documentation)"

bin/gcc-c99-allint-inline${FILE_EXT}: test-functionality.c \
		portable-endian/portable-endian.h
	@echo "Building bin/gcc-c99-allint-inline${FILE_EXT} ..."
	@${GCC} -Wall -Wextra -Werror -pedantic -O2 -g -std=c99 -DPORTABLE_ENDIAN_MODIFIERS="static inline" -c -o obj/test_gcc-c99-allint-inline.o test-functionality.c
	@${GCC} -Wall -Wextra -Werror -pedantic -O2 -g -o bin/gcc-c99-allint-inline${FILE_EXT} obj/test_gcc-c99-allint-inline.o
	@echo " => success (GOOD, matches documentation)"

bin/gcc-c99-allint-noflags${FILE_EXT}: test-functionality.c \
		portable-endian/portable-endian.h
	@echo "Building bin/gcc-c99-allint-noflags${FILE_EXT} ..."
	@${GCC} -Wall -Wextra -Werror -pedantic -O2 -g -std=c99 -c -o obj/test_gcc-c99-allint-noflags.o test-functionality.c
	@${GCC} -Wall -Wextra -Werror -pedantic -O2 -g -o bin/gcc-c99-allint-noflags${FILE_EXT} obj/test_gcc-c99-allint-noflags.o
	@echo " => success (GOOD, matches documentation)"

bin/gcc-c99-noint64-defext${FILE_EXT}: test-functionality.c as-static-lib.c \
		portable-endian/portable-endian.h
	@echo "Building bin/gcc-c99-noint64-defext${FILE_EXT} ..."
	@${GCC} -Wall -Wextra -Werror -pedantic -O2 -g -std=c99 -DPORTABLE_ENDIAN_NO_UINT_64_T -DPORTABLE_ENDIAN_MODIFIERS= -c -o obj/lib_gcc-c99-noint64-defhere.o as-static-lib.c
	@${GCC} -Wall -Wextra -Werror -pedantic -O2 -g -std=c99 -DPORTABLE_ENDIAN_NO_UINT_64_T -DPORTABLE_ENDIAN_MODIFIERS= -DPORTABLE_ENDIAN_DECLS_ONLY -c -o obj/test_gcc-c99-noint64-defext.o test-functionality.c
	@${GCC} -Wall -Wextra -Werror -pedantic -O2 -g -o bin/gcc-c99-noint64-defext${FILE_EXT} obj/lib_gcc-c99-noint64-defhere.o obj/test_gcc-c99-noint64-defext.o
	@echo " => success (GOOD, matches documentation)"

bin/gcc-c99-noint64-defhere${FILE_EXT}: test-functionality.c \
		portable-endian/portable-endian.h
	@echo "Building bin/gcc-c99-noint64-defhere${FILE_EXT} ..."
	@${GCC} -Wall -Wextra -Werror -pedantic -O2 -g -std=c99 -DPORTABLE_ENDIAN_NO_UINT_64_T -DPORTABLE_ENDIAN_MODIFIERS= -c -o obj/test_gcc-c99-noint64-defhere.o test-functionality.c
	@${GCC} -Wall -Wextra -Werror -pedantic -O2 -g -o bin/gcc-c99-noint64-defhere${FILE_EXT} obj/test_gcc-c99-noint64-defhere.o
	@echo " => success (GOOD, matches documentation)"

bin/gcc-c99-noint64-inline${FILE_EXT}: test-functionality.c \
		portable-endian/portable-endian.h
	@echo "Building bin/gcc-c99-noint64-inline${FILE_EXT} ..."
	@${GCC} -Wall -Wextra -Werror -pedantic -O2 -g -std=c99 -DPORTABLE_ENDIAN_NO_UINT_64_T -DPORTABLE_ENDIAN_MODIFIERS="static inline" -c -o obj/test_gcc-c99-noint64-inline.o test-functionality.c
	@${GCC} -Wall -Wextra -Werror -pedantic -O2 -g -o bin/gcc-c99-noint64-inline${FILE_EXT} obj/test_gcc-c99-noint64-inline.o
	@echo " => success (GOOD, matches documentation)"

bin/gcc-c99-noint64-noflags${FILE_EXT}: test-functionality.c \
		portable-endian/portable-endian.h
	@echo "Building bin/gcc-c99-noint64-noflags${FILE_EXT} ..."
	@${GCC} -Wall -Wextra -Werror -pedantic -O2 -g -std=c99 -DPORTABLE_ENDIAN_NO_UINT_64_T -c -o obj/test_gcc-c99-noint64-noflags.o test-functionality.c
	@${GCC} -Wall -Wextra -Werror -pedantic -O2 -g -o bin/gcc-c99-noint64-noflags${FILE_EXT} obj/test_gcc-c99-noint64-noflags.o
	@echo " => success (GOOD, matches documentation)"

bin/gcc-gnu89-allint-defext${FILE_EXT}: test-functionality.c as-static-lib.c \
		portable-endian/portable-endian.h
	@echo "Building bin/gcc-gnu89-allint-defext${FILE_EXT} ..."
	@${GCC} -Wall -Wextra -Werror -pedantic -O2 -g -std=gnu89 -DPORTABLE_ENDIAN_MODIFIERS= -c -o obj/lib_gcc-gnu89-allint-defhere.o as-static-lib.c
	@${GCC} -Wall -Wextra -Werror -pedantic -O2 -g -std=gnu89 -DPORTABLE_ENDIAN_MODIFIERS= -DPORTABLE_ENDIAN_DECLS_ONLY -c -o obj/test_gcc-gnu89-allint-defext.o test-functionality.c
	@${GCC} -Wall -Wextra -Werror -pedantic -O2 -g -o bin/gcc-gnu89-allint-defext${FILE_EXT} obj/lib_gcc-gnu89-allint-defhere.o obj/test_gcc-gnu89-allint-defext.o
	@echo " => success (GOOD, matches documentation)"

bin/gcc-gnu89-allint-defhere${FILE_EXT}: test-functionality.c \
		portable-endian/portable-endian.h
	@echo "Building bin/gcc-gnu89-allint-defhere${FILE_EXT} ..."
	@${GCC} -Wall -Wextra -Werror -pedantic -O2 -g -std=gnu89 -DPORTABLE_ENDIAN_MODIFIERS= -c -o obj/test_gcc-gnu89-allint-defhere.o test-functionality.c
	@${GCC} -Wall -Wextra -Werror -pedantic -O2 -g -o bin/gcc-gnu89-allint-defhere${FILE_EXT} obj/test_gcc-gnu89-allint-defhere.o
	@echo " => success (GOOD, matches documentation)"

bin/gcc-gnu89-allint-inline${FILE_EXT}: test-functionality.c \
		portable-endian/portable-endian.h
	@echo "Building bin/gcc-gnu89-allint-inline${FILE_EXT} ..."
	@if ! ${GCC} --version 2>/dev/null | grep -qc '^Apple.*clang' ; \
	then \
		${GCC} -Wall -Wextra -Werror -pedantic -O2 -g -std=gnu89 -DPORTABLE_ENDIAN_MODIFIERS="static inline" -c -o obj/test_gcc-gnu89-allint-inline.o test-functionality.c && \
		${GCC} -Wall -Wextra -Werror -pedantic -O2 -g -o bin/gcc-gnu89-allint-inline${FILE_EXT} obj/test_gcc-gnu89-allint-inline.o && \
		echo " => success (GOOD, matches documentation)" ; \
	else \
		if \
			${GCC} -Wall -Wextra -Werror -pedantic -O2 -g -std=gnu89 -DPORTABLE_ENDIAN_MODIFIERS="static inline" -c -o obj/test_gcc-gnu89-allint-inline.o test-functionality.c> /dev/null 2>&1 && \
			${GCC} -Wall -Wextra -Werror -pedantic -O2 -g -o bin/gcc-gnu89-allint-inline${FILE_EXT} obj/test_gcc-gnu89-allint-inline.o > /dev/null 2>&1 ; \
		then \
			echo " => success (BAD, doesn't match documentation!)" ; \
			exit 1 ; \
		else \
			echo " => fail (GOOD, matches documentation)" ; \
		fi ; \
	fi

bin/gcc-gnu89-allint-noflags${FILE_EXT}: test-functionality.c \
		portable-endian/portable-endian.h
	@echo "Building bin/gcc-gnu89-allint-noflags${FILE_EXT} ..."
	@${GCC} -Wall -Wextra -Werror -pedantic -O2 -g -std=gnu89 -c -o obj/test_gcc-gnu89-allint-noflags.o test-functionality.c
	@${GCC} -Wall -Wextra -Werror -pedantic -O2 -g -o bin/gcc-gnu89-allint-noflags${FILE_EXT} obj/test_gcc-gnu89-allint-noflags.o
	@echo " => success (GOOD, matches documentation)"

bin/gcc-gnu89-noint64-defext${FILE_EXT}: test-functionality.c as-static-lib.c \
		portable-endian/portable-endian.h
	@echo "Building bin/gcc-gnu89-noint64-defext${FILE_EXT} ..."
	@${GCC} -Wall -Wextra -Werror -pedantic -O2 -g -std=gnu89 -DPORTABLE_ENDIAN_NO_UINT_64_T -DPORTABLE_ENDIAN_MODIFIERS= -c -o obj/lib_gcc-gnu89-noint64-defhere.o as-static-lib.c
	@${GCC} -Wall -Wextra -Werror -pedantic -O2 -g -std=gnu89 -DPORTABLE_ENDIAN_NO_UINT_64_T -DPORTABLE_ENDIAN_MODIFIERS= -DPORTABLE_ENDIAN_DECLS_ONLY -c -o obj/test_gcc-gnu89-noint64-defext.o test-functionality.c
	@${GCC} -Wall -Wextra -Werror -pedantic -O2 -g -o bin/gcc-gnu89-noint64-defext${FILE_EXT} obj/lib_gcc-gnu89-noint64-defhere.o obj/test_gcc-gnu89-noint64-defext.o
	@echo " => success (GOOD, matches documentation)"

bin/gcc-gnu89-noint64-defhere${FILE_EXT}: test-functionality.c \
		portable-endian/portable-endian.h
	@echo "Building bin/gcc-gnu89-noint64-defhere${FILE_EXT} ..."
	@${GCC} -Wall -Wextra -Werror -pedantic -O2 -g -std=gnu89 -DPORTABLE_ENDIAN_NO_UINT_64_T -DPORTABLE_ENDIAN_MODIFIERS= -c -o obj/test_gcc-gnu89-noint64-defhere.o test-functionality.c
	@${GCC} -Wall -Wextra -Werror -pedantic -O2 -g -o bin/gcc-gnu89-noint64-defhere${FILE_EXT} obj/test_gcc-gnu89-noint64-defhere.o
	@echo " => success (GOOD, matches documentation)"

bin/gcc-gnu89-noint64-inline${FILE_EXT}: test-functionality.c \
		portable-endian/portable-endian.h
	@echo "Building bin/gcc-gnu89-noint64-inline${FILE_EXT} ..."
	@if ! ${GCC} --version 2>/dev/null | grep -qc '^Apple.*clang' ; \
	then \
		${GCC} -Wall -Wextra -Werror -pedantic -O2 -g -std=gnu89 -DPORTABLE_ENDIAN_NO_UINT_64_T -DPORTABLE_ENDIAN_MODIFIERS="static inline" -c -o obj/test_gcc-gnu89-noint64-inline.o test-functionality.c && \
		${GCC} -Wall -Wextra -Werror -pedantic -O2 -g -o bin/gcc-gnu89-noint64-inline${FILE_EXT} obj/test_gcc-gnu89-noint64-inline.o && \
		echo " => success (GOOD, matches documentation)" ; \
	else \
		if \
			${GCC} -Wall -Wextra -Werror -pedantic -O2 -g -std=gnu89 -DPORTABLE_ENDIAN_NO_UINT_64_T -DPORTABLE_ENDIAN_MODIFIERS="static inline" -c -o obj/test_gcc-gnu89-noint64-inline.o test-functionality.c> /dev/null 2>&1 && \
			${GCC} -Wall -Wextra -Werror -pedantic -O2 -g -o bin/gcc-gnu89-noint64-inline${FILE_EXT} obj/test_gcc-gnu89-noint64-inline.o > /dev/null 2>&1 ; \
		then \
			echo " => success (BAD, doesn't match documentation!)" ; \
			exit 1 ; \
		else \
			echo " => fail (GOOD, matches documentation)" ; \
		fi ; \
	fi

bin/gcc-gnu89-noint64-noflags${FILE_EXT}: test-functionality.c \
		portable-endian/portable-endian.h
	@echo "Building bin/gcc-gnu89-noint64-noflags${FILE_EXT} ..."
	@${GCC} -Wall -Wextra -Werror -pedantic -O2 -g -std=gnu89 -DPORTABLE_ENDIAN_NO_UINT_64_T -c -o obj/test_gcc-gnu89-noint64-noflags.o test-functionality.c
	@${GCC} -Wall -Wextra -Werror -pedantic -O2 -g -o bin/gcc-gnu89-noint64-noflags${FILE_EXT} obj/test_gcc-gnu89-noint64-noflags.o
	@echo " => success (GOOD, matches documentation)"

bin/gcc-gnu99-allint-defext${FILE_EXT}: test-functionality.c as-static-lib.c \
		portable-endian/portable-endian.h
	@echo "Building bin/gcc-gnu99-allint-defext${FILE_EXT} ..."
	@${GCC} -Wall -Wextra -Werror -pedantic -O2 -g -std=gnu99 -DPORTABLE_ENDIAN_MODIFIERS= -c -o obj/lib_gcc-gnu99-allint-defhere.o as-static-lib.c
	@${GCC} -Wall -Wextra -Werror -pedantic -O2 -g -std=gnu99 -DPORTABLE_ENDIAN_MODIFIERS= -DPORTABLE_ENDIAN_DECLS_ONLY -c -o obj/test_gcc-gnu99-allint-defext.o test-functionality.c
	@${GCC} -Wall -Wextra -Werror -pedantic -O2 -g -o bin/gcc-gnu99-allint-defext${FILE_EXT} obj/lib_gcc-gnu99-allint-defhere.o obj/test_gcc-gnu99-allint-defext.o
	@echo " => success (GOOD, matches documentation)"

bin/gcc-gnu99-allint-defhere${FILE_EXT}: test-functionality.c \
		portable-endian/portable-endian.h
	@echo "Building bin/gcc-gnu99-allint-defhere${FILE_EXT} ..."
	@${GCC} -Wall -Wextra -Werror -pedantic -O2 -g -std=gnu99 -DPORTABLE_ENDIAN_MODIFIERS= -c -o obj/test_gcc-gnu99-allint-defhere.o test-functionality.c
	@${GCC} -Wall -Wextra -Werror -pedantic -O2 -g -o bin/gcc-gnu99-allint-defhere${FILE_EXT} obj/test_gcc-gnu99-allint-defhere.o
	@echo " => success (GOOD, matches documentation)"

bin/gcc-gnu99-allint-inline${FILE_EXT}: test-functionality.c \
		portable-endian/portable-endian.h
	@echo "Building bin/gcc-gnu99-allint-inline${FILE_EXT} ..."
	@${GCC} -Wall -Wextra -Werror -pedantic -O2 -g -std=gnu99 -DPORTABLE_ENDIAN_MODIFIERS="static inline" -c -o obj/test_gcc-gnu99-allint-inline.o test-functionality.c
	@${GCC} -Wall -Wextra -Werror -pedantic -O2 -g -o bin/gcc-gnu99-allint-inline${FILE_EXT} obj/test_gcc-gnu99-allint-inline.o
	@echo " => success (GOOD, matches documentation)"

bin/gcc-gnu99-allint-noflags${FILE_EXT}: test-functionality.c \
		portable-endian/portable-endian.h
	@echo "Building bin/gcc-gnu99-allint-noflags${FILE_EXT} ..."
	@${GCC} -Wall -Wextra -Werror -pedantic -O2 -g -std=gnu99 -c -o obj/test_gcc-gnu99-allint-noflags.o test-functionality.c
	@${GCC} -Wall -Wextra -Werror -pedantic -O2 -g -o bin/gcc-gnu99-allint-noflags${FILE_EXT} obj/test_gcc-gnu99-allint-noflags.o
	@echo " => success (GOOD, matches documentation)"

bin/gcc-gnu99-noint64-defext${FILE_EXT}: test-functionality.c as-static-lib.c \
		portable-endian/portable-endian.h
	@echo "Building bin/gcc-gnu99-noint64-defext${FILE_EXT} ..."
	@${GCC} -Wall -Wextra -Werror -pedantic -O2 -g -std=gnu99 -DPORTABLE_ENDIAN_NO_UINT_64_T -DPORTABLE_ENDIAN_MODIFIERS= -c -o obj/lib_gcc-gnu99-noint64-defhere.o as-static-lib.c
	@${GCC} -Wall -Wextra -Werror -pedantic -O2 -g -std=gnu99 -DPORTABLE_ENDIAN_NO_UINT_64_T -DPORTABLE_ENDIAN_MODIFIERS= -DPORTABLE_ENDIAN_DECLS_ONLY -c -o obj/test_gcc-gnu99-noint64-defext.o test-functionality.c
	@${GCC} -Wall -Wextra -Werror -pedantic -O2 -g -o bin/gcc-gnu99-noint64-defext${FILE_EXT} obj/lib_gcc-gnu99-noint64-defhere.o obj/test_gcc-gnu99-noint64-defext.o
	@echo " => success (GOOD, matches documentation)"

bin/gcc-gnu99-noint64-defhere${FILE_EXT}: test-functionality.c \
		portable-endian/portable-endian.h
	@echo "Building bin/gcc-gnu99-noint64-defhere${FILE_EXT} ..."
	@${GCC} -Wall -Wextra -Werror -pedantic -O2 -g -std=gnu99 -DPORTABLE_ENDIAN_NO_UINT_64_T -DPORTABLE_ENDIAN_MODIFIERS= -c -o obj/test_gcc-gnu99-noint64-defhere.o test-functionality.c
	@${GCC} -Wall -Wextra -Werror -pedantic -O2 -g -o bin/gcc-gnu99-noint64-defhere${FILE_EXT} obj/test_gcc-gnu99-noint64-defhere.o
	@echo " => success (GOOD, matches documentation)"

bin/gcc-gnu99-noint64-inline${FILE_EXT}: test-functionality.c \
		portable-endian/portable-endian.h
	@echo "Building bin/gcc-gnu99-noint64-inline${FILE_EXT} ..."
	@${GCC} -Wall -Wextra -Werror -pedantic -O2 -g -std=gnu99 -DPORTABLE_ENDIAN_NO_UINT_64_T -DPORTABLE_ENDIAN_MODIFIERS="static inline" -c -o obj/test_gcc-gnu99-noint64-inline.o test-functionality.c
	@${GCC} -Wall -Wextra -Werror -pedantic -O2 -g -o bin/gcc-gnu99-noint64-inline${FILE_EXT} obj/test_gcc-gnu99-noint64-inline.o
	@echo " => success (GOOD, matches documentation)"

bin/gcc-gnu99-noint64-noflags${FILE_EXT}: test-functionality.c \
		portable-endian/portable-endian.h
	@echo "Building bin/gcc-gnu99-noint64-noflags${FILE_EXT} ..."
	@${GCC} -Wall -Wextra -Werror -pedantic -O2 -g -std=gnu99 -DPORTABLE_ENDIAN_NO_UINT_64_T -c -o obj/test_gcc-gnu99-noint64-noflags.o test-functionality.c
	@${GCC} -Wall -Wextra -Werror -pedantic -O2 -g -o bin/gcc-gnu99-noint64-noflags${FILE_EXT} obj/test_gcc-gnu99-noint64-noflags.o
	@echo " => success (GOOD, matches documentation)"

bin/tcc-std-allint-defext${FILE_EXT}: test-functionality.c as-static-lib.c \
		portable-endian/portable-endian.h
	@echo "Building bin/tcc-std-allint-defext${FILE_EXT} ..."
	@${TCC} -Wall -Werror -g  -DPORTABLE_ENDIAN_MODIFIERS= -c -o obj/lib_tcc-std-allint-defhere.o as-static-lib.c
	@${TCC} -Wall -Werror -g  -DPORTABLE_ENDIAN_MODIFIERS= -DPORTABLE_ENDIAN_DECLS_ONLY -c -o obj/test_tcc-std-allint-defext.o test-functionality.c
	@${TCC} -Wall -Werror -g -o bin/tcc-std-allint-defext${FILE_EXT} obj/lib_tcc-std-allint-defhere.o obj/test_tcc-std-allint-defext.o
	@echo " => success (GOOD, matches documentation)"

bin/tcc-std-allint-defhere${FILE_EXT}: test-functionality.c \
		portable-endian/portable-endian.h
	@echo "Building bin/tcc-std-allint-defhere${FILE_EXT} ..."
	@${TCC} -Wall -Werror -g  -DPORTABLE_ENDIAN_MODIFIERS= -c -o obj/test_tcc-std-allint-defhere.o test-functionality.c
	@${TCC} -Wall -Werror -g -o bin/tcc-std-allint-defhere${FILE_EXT} obj/test_tcc-std-allint-defhere.o
	@echo " => success (GOOD, matches documentation)"

bin/tcc-std-allint-inline${FILE_EXT}: test-functionality.c \
		portable-endian/portable-endian.h
	@echo "Building bin/tcc-std-allint-inline${FILE_EXT} ..."
	@${TCC} -Wall -Werror -g  -DPORTABLE_ENDIAN_MODIFIERS="static inline" -c -o obj/test_tcc-std-allint-inline.o test-functionality.c
	@${TCC} -Wall -Werror -g -o bin/tcc-std-allint-inline${FILE_EXT} obj/test_tcc-std-allint-inline.o
	@echo " => success (GOOD, matches documentation)"

bin/tcc-std-allint-noflags${FILE_EXT}: test-functionality.c \
		portable-endian/portable-endian.h
	@echo "Building bin/tcc-std-allint-noflags${FILE_EXT} ..."
	@${TCC} -Wall -Werror -g  -c -o obj/test_tcc-std-allint-noflags.o test-functionality.c
	@${TCC} -Wall -Werror -g -o bin/tcc-std-allint-noflags${FILE_EXT} obj/test_tcc-std-allint-noflags.o
	@echo " => success (GOOD, matches documentation)"

bin/tcc-std-noint64-defext${FILE_EXT}: test-functionality.c as-static-lib.c \
		portable-endian/portable-endian.h
	@echo "Building bin/tcc-std-noint64-defext${FILE_EXT} ..."
	@${TCC} -Wall -Werror -g  -DPORTABLE_ENDIAN_NO_UINT_64_T -DPORTABLE_ENDIAN_MODIFIERS= -c -o obj/lib_tcc-std-noint64-defhere.o as-static-lib.c
	@${TCC} -Wall -Werror -g  -DPORTABLE_ENDIAN_NO_UINT_64_T -DPORTABLE_ENDIAN_MODIFIERS= -DPORTABLE_ENDIAN_DECLS_ONLY -c -o obj/test_tcc-std-noint64-defext.o test-functionality.c
	@${TCC} -Wall -Werror -g -o bin/tcc-std-noint64-defext${FILE_EXT} obj/lib_tcc-std-noint64-defhere.o obj/test_tcc-std-noint64-defext.o
	@echo " => success (GOOD, matches documentation)"

bin/tcc-std-noint64-defhere${FILE_EXT}: test-functionality.c \
		portable-endian/portable-endian.h
	@echo "Building bin/tcc-std-noint64-defhere${FILE_EXT} ..."
	@${TCC} -Wall -Werror -g  -DPORTABLE_ENDIAN_NO_UINT_64_T -DPORTABLE_ENDIAN_MODIFIERS= -c -o obj/test_tcc-std-noint64-defhere.o test-functionality.c
	@${TCC} -Wall -Werror -g -o bin/tcc-std-noint64-defhere${FILE_EXT} obj/test_tcc-std-noint64-defhere.o
	@echo " => success (GOOD, matches documentation)"

bin/tcc-std-noint64-inline${FILE_EXT}: test-functionality.c \
		portable-endian/portable-endian.h
	@echo "Building bin/tcc-std-noint64-inline${FILE_EXT} ..."
	@${TCC} -Wall -Werror -g  -DPORTABLE_ENDIAN_NO_UINT_64_T -DPORTABLE_ENDIAN_MODIFIERS="static inline" -c -o obj/test_tcc-std-noint64-inline.o test-functionality.c
	@${TCC} -Wall -Werror -g -o bin/tcc-std-noint64-inline${FILE_EXT} obj/test_tcc-std-noint64-inline.o
	@echo " => success (GOOD, matches documentation)"

bin/tcc-std-noint64-noflags${FILE_EXT}: test-functionality.c \
		portable-endian/portable-endian.h
	@echo "Building bin/tcc-std-noint64-noflags${FILE_EXT} ..."
	@${TCC} -Wall -Werror -g  -DPORTABLE_ENDIAN_NO_UINT_64_T -c -o obj/test_tcc-std-noint64-noflags.o test-functionality.c
	@${TCC} -Wall -Werror -g -o bin/tcc-std-noint64-noflags${FILE_EXT} obj/test_tcc-std-noint64-noflags.o
	@echo " => success (GOOD, matches documentation)"
